<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘耀方的个人博客</title>
  
  <subtitle>新的旅程</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-16T14:55:48.046Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liuyaofang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>powerDesigner的一些记录</title>
    <link href="http://yoursite.com/2019/08/16/19_8_16-powerDesigner%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/08/16/19_8_16-powerDesigner的一些记录/</id>
    <published>2019-08-16T14:50:32.174Z</published>
    <updated>2019-08-16T14:55:48.046Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>你会很快成长，一旦你选择了长大。</p></blockquote><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><ul><li>为什么要使用powerDesigner?<br>不同数据库之间的表转换；<br>表与表之间的关系。</li><li>概念补充<br>概念模型(CDM Conceptual Data Model)<br>物理模型（PDM,Physical Data Model）<br>面向对象的模型（OOM Objcet Oriented Model）<br>业务模型（BPM Business Process Model）</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li><a href="http://soft.onlinedown.net/soft/577763.htm" title="请点击" target="_blank" rel="noopener">下载</a></li><li>PowerDesigner汉化方法，<a href="https://pan.baidu.com/s/1qHbPtjoXA3QxtTTul_TQeA" target="_blank" rel="noopener">下载汉化包</a></li><li>PowerDesigner破解方法, 将破解包中的文件复制到安装路径中。</li></ul><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol><li>概念模型构建</li><li>概念模型 <strong>转换</strong> 物理模型 （或者构建物理模型也可转换概念模型）</li><li>在物理模型导出SQL表结构</li></ol><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;你会很快成长，一旦你选择了长大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;为什么要使用powerDe
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Maven的一些记录</title>
    <link href="http://yoursite.com/2019/08/12/19_8_12-Maven%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/08/12/19_8_12-Maven的一些记录/</id>
    <published>2019-08-12T13:41:34.623Z</published>
    <updated>2019-08-12T13:45:06.196Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>如果你觉得活的很轻松，想一想是不是有人替你负重前行。</p></blockquote><h1 id="mvn-compile与mvn-install、mvn-deploy的区别"><a href="#mvn-compile与mvn-install、mvn-deploy的区别" class="headerlink" title="mvn compile与mvn install、mvn deploy的区别"></a>mvn compile与mvn install、mvn deploy的区别</h1><ul><li>mvn compile，编译类文件</li><li>mvn install，包含mvn compile，mvn package，然后上传到本地仓库</li><li>mvn deploy,包含mvn install,然后，上传到私服</li></ul><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;如果你觉得活的很轻松，想一想是不是有人替你负重前行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;mvn-compile与mvn-install、mvn-deploy的区别&quot;&gt;&lt;a href=&quot;#mvn-compile与mvn-instal
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Nexus私服+Docker私服+GitLab私服的一些记录</title>
    <link href="http://yoursite.com/2019/08/07/19_8_7-Nexus+Docker%E7%A7%81%E6%9C%8D+GitLab%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/08/07/19_8_7-Nexus+Docker私服+GitLab的一些记录/</id>
    <published>2019-08-07T15:51:36.487Z</published>
    <updated>2019-08-16T14:59:03.481Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nexus私服-N-K-SA-SI"><a href="#Nexus私服-N-K-SA-SI" class="headerlink" title="Nexus私服 (N K SA SI)"></a>Nexus私服 (N K SA SI)</h1><ul><li><p>基本</p><ul><li>一种maven的仓库管理器</li><li>比较吃内存，虚拟机最好开2G内存</li></ul></li><li><p>在项目中为什么用私服</p><ul><li>企业模块开发，不想将代码暴露并随意修改，所以放到私服公用<ul><li>流程</li><li>配置认证信息。maven的setting.xml添加nexus认证信息（在servers的节点下）</li><li>Maven的一些命令</li><li>mvn install</li><li>mvn deploy</li><li>仓库有快照版本，发型版本等</li><li>free -h  查询内存占用</li><li>chmod 777修改权限</li></ul></li></ul><hr></li></ul><ol><li><p>使用 Docker 来安装和运行 Nexus，docker-compose.yml内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  version: &apos;2.0&apos;</span><br><span class="line">services:</span><br><span class="line">  nexus:</span><br><span class="line">    restart: always</span><br><span class="line">    image: sonatype/nexus3</span><br><span class="line">    container_name: nexus</span><br><span class="line">    ports:</span><br><span class="line">      - 7090:8081</span><br><span class="line">    volumes:</span><br><span class="line">      - /usr/local/docker/nexus/data:/nexus-data</span><br></pre></td></tr></table></figure><p>启动<code>docker-compose up -d</code>。<br>查看是否启动成功docker-compose logs nexus(服务的名称)<br>第一次启动可能会出现权限问题<code>chmod 777 /usr/local/docker/nexus/data</code></p></li><li><p>登录<a href="http://192.168.2.133:7090/" target="_blank" rel="noopener">http://192.168.2.133:7090/</a> 用户名：admin 密码：admin123</p></li><li><p>配置认证信息,在 Maven settings.xml中添加 Nexus 认证信息(servers 节点下)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">  &lt;server&gt;</span><br><span class="line">  &lt;id&gt;nexus-releases&lt;/id&gt;</span><br><span class="line">  &lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">  &lt;password&gt;admin123&lt;/password&gt;</span><br><span class="line">&lt;/server&gt;</span><br><span class="line"></span><br><span class="line">&lt;server&gt;</span><br><span class="line">  &lt;id&gt;nexus-snapshots&lt;/id&gt;</span><br><span class="line">  &lt;username&gt;admin&lt;/username&gt;</span><br><span class="line">  &lt;password&gt;admin123&lt;/password&gt;</span><br><span class="line">&lt;/server&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置自动化部署.在 pom.xml 中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 配置自动化部署 --&gt;</span><br><span class="line">&lt;distributionManagement&gt;</span><br><span class="line">&lt;repository&gt;</span><br><span class="line">&lt;id&gt;nexus-releases&lt;/id&gt;</span><br><span class="line">&lt;name&gt;Nexus Release Repository&lt;/name&gt;</span><br><span class="line">&lt;url&gt;http://192.168.2.133:7090/repository/maven-releases/&lt;/url&gt;</span><br><span class="line">&lt;/repository&gt;</span><br><span class="line">&lt;snapshotRepository&gt;</span><br><span class="line">&lt;id&gt;nexus-snapshots&lt;/id&gt;</span><br><span class="line">&lt;name&gt;Nexus Snapshot Repository&lt;/name&gt;</span><br><span class="line">&lt;url&gt;http://192.168.2.133:7090/repository/maven-snapshots/&lt;/url&gt;</span><br><span class="line">&lt;/snapshotRepository&gt;</span><br><span class="line">&lt;/distributionManagement&gt;</span><br></pre></td></tr></table></figure></li><li><p>部署到仓库 <code>mvn deploy</code></p></li></ol><hr><ol start="6"><li>上传第三方 JAR 包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn -X deploy:deploy-file  &quot;-DgroupId=cn.wolfcode&quot; &quot;-DartifactId=p2p&quot; &quot;-Dversion=3.6.0&quot; &quot;-Dpackaging=jar&quot; &quot;-Dfile=D:\nexus-textSf.jar&quot; &quot;-Durl=http://192.168.2.133:7090/repository/maven-3rd/&quot; &quot;-DrepositoryId=thirdparty&quot;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>为什么带双引号。不带双引号会报找不到pom的错。加了双引号就可以上传了。</p><ol start="7"><li>使用上传的jar包。</li><li>setting.xml添加镜像。 然后pom引入jar包。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;nexus&lt;/id&gt;</span><br><span class="line">      &lt;name&gt;private maven&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;http://192.168.2.133:7090/repository/maven-public/&lt;/url&gt;</span><br><span class="line">      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;        </span><br><span class="line">    &lt;/mirror&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><h1 id="Docker私服"><a href="#Docker私服" class="headerlink" title="Docker私服"></a>Docker私服</h1><ul><li>安装使用registry</li><li>docker pull 是从官网下载</li><li>流程<ul><li>配置客户端 /etc/docker/daemon.json</li><li>docker info查看配置成功否</li><li>docker tag tomcat 192.168.1.21:5000/tomcat</li><li>docker push 192.168.1.21:5000/tomcat 推送到私服</li><li>安装webui</li></ul></li></ul><hr><ol><li>拉取registry镜像<code>docker pull registry</code></li><li>通过registry镜像启动容器<code>docker run -d -v /opt/docker-registy -p 5000:5000 --name myRegistry registry</code></li><li>容器启动后打开浏览器输入192.168.140.132:5000/v2/ 返回{}说明运行正常</li><li>修改/etc/docker/daemon.json文件,增加<code>&quot;insecure-registries&quot;: [&quot;192.168.140.132:5000&quot;]</code></li><li>然后重启docker引擎 <code>service docker restart</code></li><li>推送到私有服务器<code>docker pull 192.168.140.132:5000/liuyaofang/tomcat</code></li><li>推送成功查看<a href="http://192.168.140.132:5000/v2/_catalog可以看到仓库" target="_blank" rel="noopener">http://192.168.140.132:5000/v2/_catalog可以看到仓库</a></li><li><a href="http://192.168.140.132:5000/v2/仓库名/tags/list" target="_blank" rel="noopener">http://192.168.140.132:5000/v2/仓库名/tags/list</a> 可以查看tags标签</li><li>拉取镜像 <code>docker pull 192.168.140.132:5000/liuyaofang/tomcat:my</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Nexus私服-N-K-SA-SI&quot;&gt;&lt;a href=&quot;#Nexus私服-N-K-SA-SI&quot; class=&quot;headerlink&quot; title=&quot;Nexus私服 (N K SA SI)&quot;&gt;&lt;/a&gt;Nexus私服 (N K SA SI)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitHub+Git+Gitlab的一些记录</title>
    <link href="http://yoursite.com/2019/08/06/19_8_6-GitHub+Git+Gitlab%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/08/06/19_8_6-GitHub+Git+Gitlab的一些记录/</id>
    <published>2019-08-06T15:33:33.171Z</published>
    <updated>2019-08-15T00:12:05.460Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>夜阑卧听风吹雨，铁马冰河入梦来。铁马是你，冰河也是你。</p></blockquote><h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><ul><li>第三方托管平台</li><li>初始化仓库。 readme.md (md为markdown语法的文件) + 开源协议（apache为公开）</li></ul><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><ul><li>简介<ul><li>分布式版本库，本身是个命令行工具</li><li>windows下载git, tortoiseGit以及乌龟的中文包</li><li>支持本地运行。</li></ul></li><li>使用<ul><li>克隆 git clone +地址   （克隆下来的项目中有 .gitignore用来过滤不被推送同步的。我们需要添加.project,.idea，.project为elipcse生成，.idea为idea生成）</li><li>添加，git中间有个缓存的定义，需要添加才能提交。git add * </li><li>提交   git commit -m ‘注释’</li><li>推送。  推送到服务器。 git push</li></ul></li></ul><h1 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h1><ul><li>git代码托管，开源的git平台</li><li>Ruby写的运行于 Rails.  (java  on tomcat)</li><li>使用Docker安装GitLab</li><li>虚拟机内存不能低于2GB. 否则会 <strong>卡</strong></li><li>配置SSH, 免密登录推送。 持续登录集成。</li></ul><hr><ol><li><p>gitlab镜像拉取 <code>docker pull gitlab/gitlab-ce</code></p></li><li><p>gitlab镜像运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d  -p 443:443 -p 80:80 -p 222:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce</span><br></pre></td></tr></table></figure></li><li><p>配置<br><code>vim /home/gitlab/config/gitlab.rb</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 配置http协议所使用的访问地址,不加端口号默认为80</span><br><span class="line">external_url &apos;http://192.168.199.231&apos;</span><br><span class="line"></span><br><span class="line"># 配置ssh协议所使用的访问地址和端口</span><br><span class="line">gitlab_rails[&apos;gitlab_ssh_host&apos;] = &apos;192.168.199.231&apos;</span><br><span class="line">gitlab_rails[&apos;gitlab_shell_ssh_port&apos;] = 222 # 此端口是run时22端口映射的222端口</span><br><span class="line">:wq #保存配置文件并退出</span><br></pre></td></tr></table></figure></li><li><p>重启容器 <code>docker restart gitlab</code></p></li><li><p>进入地址创建项目</p></li><li><p>克隆项目 <code>git clone 项目地址</code></p></li><li><p>添加修改到中间缓存 <code>git add  .</code></p></li><li><p>提交修改到主干 <code>git commit -m &quot;注释&quot;</code></p></li><li><p>提交到私服 <code>git push origin master</code></p></li></ol><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;夜阑卧听风吹雨，铁马冰河入梦来。铁马是你，冰河也是你。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;GitHub&quot;&gt;&lt;a href=&quot;#GitHub&quot; class=&quot;headerlink&quot; title=&quot;GitHub&quot;&gt;&lt;/a&gt;GitHub
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>生产环境部署java+tomcat+mysql的一些体会</title>
    <link href="http://yoursite.com/2019/08/04/19_8_4-%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2java+tomcat+mysql%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%93%E4%BC%9A/"/>
    <id>http://yoursite.com/2019/08/04/19_8_4-生产环境部署java+tomcat+mysql的一些体会/</id>
    <published>2019-08-04T01:58:07.964Z</published>
    <updated>2019-08-04T04:43:49.425Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java的安装"><a href="#java的安装" class="headerlink" title="java的安装"></a>java的安装</h2><ul><li><a href="https://pan.baidu.com/s/1dUI6KNGnJRdoNivpFNtjkg" title="请点击" target="_blank" rel="noopener">链接</a> </li><li>提取码：y8w0 </li></ul><blockquote><p>具体安装可查看别人写的博客，整个流程大概是以下：<br>下载 jre-8u202-linux-x64.tar，因为是往生产环境部署，所以下的是生产tar包<br> 解压缩 tar -xzvf  jre-8u202-linux-x64.tar 在/usr/local, 为甚麽是这个文件夹，据说是国际惯例。<br> 然后配置环境变量<br> java  -verion 查看配置是否成功<br> ···<br> java version “1.8.0_202”<br>Java(TM) SE Runtime Environment (build 1.8.0_202-b08)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)<br> ···</p></blockquote><h2 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h2><ul><li><a href="https://pan.baidu.com/s/1d56oRlERMaYokjaMSqaQ2g" title="请点击" target="_blank" rel="noopener">链接</a> </li><li>提取码：n98l </li></ul><blockquote><p>安装流程<br> 下载tar包，上传至服务器<br> 解压在/usr/local<br> 配置一些环境变量<br> 在bin下运行 ./startup.sh<br> 查看是否启动成功cd ../logs/ 执行tail -f catalina.out，或者直接反问ip+端口</p></blockquote><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><ul><li>通过apt-get 安装mysql后；</li><li>开启远程连接支持，在/etc/mysql/my.ini文件中（cat  my.ini），有<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!includedir /etc/mysql/conf.d/</span><br><span class="line">!includedir /etc/mysql/mysql.conf.d/</span><br></pre></td></tr></table></figure></li></ul><p>通过 grep bind-address /etc/mysql/mysql.conf.d/mysqld.cnf<br>可找到bind-address= xxx.xxx.xxx.xxx 注释掉</p><ul><li><p>创建用户，授权。为啥要创建两个myuser并且有localhost和%，好像是localhost是在服务器本地连接，%是为了在任何ip下都能连接(<strong>解释的不到位，希望有人能出来指正</strong>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &apos;myuser&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;mypass&apos;;</span><br><span class="line">CREATE USER &apos;myuser&apos;@&apos;%&apos; IDENTIFIED BY &apos;mypass&apos;;</span><br><span class="line">GRANT ALL ON *.* TO &apos;myuser&apos;@&apos;localhost&apos;;</span><br><span class="line">GRANT ALL ON *.* TO &apos;myuser&apos;@&apos;%&apos;;</span><br></pre></td></tr></table></figure></li><li><p>重启服务 restart mysql service:</p></li><li><p>mysql安装开启远程服务会遇到很多问题。像1045啥的，对应百度把。</p></li></ul><h6 id="可能用到的命令"><a href="#可能用到的命令" class="headerlink" title="可能用到的命令"></a>可能用到的命令</h6><ul><li>find -name 名字 - 查找文件，跟eclipse 的ctrl + shift + R类似</li><li>grep 字段 某文件 - 在某文件下查找某字段</li></ul><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java的安装&quot;&gt;&lt;a href=&quot;#java的安装&quot; class=&quot;headerlink&quot; title=&quot;java的安装&quot;&gt;&lt;/a&gt;java的安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pan.baidu.com/s/1dUI6KNGnJR
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux-ubuntu的一些其他用法</title>
    <link href="http://yoursite.com/2019/08/03/19_8_3-Linux-ubuntu%E7%9A%84%E4%B8%80%E4%BA%9B%E5%85%B6%E4%BB%96%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/03/19_8_3-Linux-ubuntu的一些其他用法/</id>
    <published>2019-08-03T11:28:49.694Z</published>
    <updated>2019-08-03T12:36:28.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件的安装卸载"><a href="#软件的安装卸载" class="headerlink" title="软件的安装卸载"></a>软件的安装卸载</h2><p>apt 为应用程序，即ubuntu下的软件包管理 （centos 的软件包管理为 yum）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">记录一部分指令：</span><br><span class="line">安装某应用 apt-get install ** </span><br><span class="line">卸载apt-get remove ** </span><br><span class="line">自动卸载（包括依赖的应用） apt-get autoremove **</span><br></pre></td></tr></table></figure><h2 id="修改apt的数据源"><a href="#修改apt的数据源" class="headerlink" title="修改apt的数据源"></a>修改apt的数据源</h2><ol><li><p>vim /etc/apt/sources.list</p></li><li><p>然后添加以下内容</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></li><li><p>更新软件列表 <code>sudo apt update</code></p></li></ol><h2 id="用户和组管理"><a href="#用户和组管理" class="headerlink" title="用户和组管理"></a>用户和组管理</h2><ul><li>linux 的root超级管理员默认关闭，需要我们自己开启。</li><li>su切换root用户</li><li>linux默认root不能远程连接，需要我们开启 </li></ul><p><strong>1）界面登录root</strong></p><p>1、首先右键开启一个终端，输入<strong>解锁</strong>用户root的命令<br>    <code>sudo passwd -u root</code><br>2、为root用户<strong>设置一个密码</strong>，他会让你输入两次密码<br><code>sudo passwd root</code><br>3、测试root用户<br>3.1、使用<code>su</code> ,登陆root用户，它会让你输入root的密码，就是你刚刚设置的<br>3.2、测试安装命令时不加 sudo命令<br><code>apt install nano</code><br>3.3、退出root用户，回到上一个用户<br><code>exit</code></p><blockquote><p>注：现在还不可以用root登陆，这意味着你执行一些命令之前要么通过 su切换到 root 或者 命令前加上 sudo，还需设置来进行登录root</p></blockquote><p>4、编辑下面几个配置文件，让root可以登陆<br>4.1 sudo gedit /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf<br>执行上面的命令会弹出一个文本编辑，在文本编辑中加入下面这段配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">greeter-show-manual-login=true</span><br><span class="line">all-guest=false</span><br></pre></td></tr></table></figure><p>4.2 sudo gedit /etc/pam.d/gdm-autologin<br>将 auth    required    pam_succeed_if.so user != root quiet_success 注释掉</p><p>4.3 sudo gedit /etc/pam.d/gdm-password<br>和上面一样的，注释掉 auth    required    pam_succeed_if.so user != root quiet_success</p><p>4.4 sudo gedit /root/.profile<br>将文件中的mesg n || true 注释，修改成 tty -s&amp;&amp;mesg n || true</p><blockquote><p>现在可以通过界面的方式登陆了！但是没办法远程登陆，如果你想用root远程登陆的话，还需要修改ssh的配置文件</p></blockquote><p><strong>2）远程登录root</strong><br>sudo gedit /etc/ssh/sshd_config<br>其中PermitRootLogin 这个配置应该是注释的，复制开启并将其中PermitRootLogin 这个配置项改为 yes</p><h2 id="文件和目录的权限"><a href="#文件和目录的权限" class="headerlink" title="文件和目录的权限"></a>文件和目录的权限</h2><ul><li>ls -la 查看到的详情，前面一共有10位。分为四段。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-  rw-  rw-  rw-</span><br><span class="line">1)文件类型</span><br><span class="line">2)所有者权限</span><br><span class="line">3)组权限</span><br><span class="line">4)其他用户权限</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th>-</th><th>r</th><th>w</th><th>-</th><th>r</th><th>w</th><th>-</th><th>r</th><th>w</th><th>-</th></tr></thead><tbody><tr><td>文件类型。d为目录，-为文件</td><td>所有者的读权限</td><td>所有者的写权限</td><td>所有者的执行权限</td><td>组的读权限</td><td>组的写权限</td><td>组的执行权限</td><td>其他用户的读权限</td><td>其他用户的写权限</td><td>其他用户的执行权限</td></tr></tbody></table><ul><li>创建可执行文件要声明 <code>#/bin/bash</code></li><li>修改权限<code>chmod +w/+r  文件</code></li></ul><h2 id="权限的数字表示法"><a href="#权限的数字表示法" class="headerlink" title="权限的数字表示法"></a>权限的数字表示法</h2><ul><li>0表示没有任何权限</li><li>1表示可执行权限 = x</li><li>2表示可写权限 = w</li><li>4表示可读权限 = r</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rwx 4+2+1 = 7 </span><br><span class="line">rw- 4+2 = 6</span><br><span class="line">r-x 4+1 = 5</span><br><span class="line">--- 0</span><br><span class="line">例如：如果说想把666.txt这个文件的权限设置成</span><br><span class="line">所有者拥有全部权限，</span><br><span class="line">同组用户拥有读写权限，</span><br><span class="line">其他用户拥有读权限，</span><br><span class="line">则数字形式该写为：</span><br><span class="line">chmod 764 666.txt</span><br></pre></td></tr></table></figure><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;软件的安装卸载&quot;&gt;&lt;a href=&quot;#软件的安装卸载&quot; class=&quot;headerlink&quot; title=&quot;软件的安装卸载&quot;&gt;&lt;/a&gt;软件的安装卸载&lt;/h2&gt;&lt;p&gt;apt 为应用程序，即ubuntu下的软件包管理 （centos 的软件包管理为 yum）。&lt;/p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux系统vim命令的一些体验</title>
    <link href="http://yoursite.com/2019/08/03/19_7_28-linux-vim/"/>
    <id>http://yoursite.com/2019/08/03/19_7_28-linux-vim/</id>
    <published>2019-08-03T09:40:08.462Z</published>
    <updated>2019-08-03T09:56:49.819Z</updated>
    
    <content type="html"><![CDATA[<h2 id="三个模式"><a href="#三个模式" class="headerlink" title="三个模式"></a>三个模式</h2><p>Nomal mode（默认模式）。<br>Insert mode （插入模式 i I  a  A  ）。<br>Visual mode（可视模式，取名叫光标模式或者选择模式）。- ctrl + v 或者 v 或 V</p><h2 id="正则表达式相关"><a href="#正则表达式相关" class="headerlink" title="正则表达式相关"></a>正则表达式相关</h2><ul><li>$ ： 移动光标到行尾</li><li>^ : 移动光标到当前行的第一个字母位置</li></ul><h2 id="移动相关"><a href="#移动相关" class="headerlink" title="移动相关"></a>移动相关</h2><p>h（左）、l（右）、j（上）、k（下）</p><h2 id="操作类"><a href="#操作类" class="headerlink" title="操作类"></a>操作类</h2><p>d（delete）、i（insert）、o(另起一行insert)、a（append）、c（change,将当前行清空insert）、y（copy）、p（paste）</p><h2 id="文本的复制-y"><a href="#文本的复制-y" class="headerlink" title="文本的复制 y"></a>文本的复制 y</h2><p>要选中内容进行复制，先在命令模式下按 v 进入 Visual Mode，然后用 方向键 或 hjkl 选择文本，再按 y 进行复制。</p><h2 id="文本的剪切-d"><a href="#文本的剪切-d" class="headerlink" title="文本的剪切 d"></a>文本的剪切 d</h2><p>要选中内容进行复制，先在命令模式下按 v 进入 Visual Mode，然后用 方向键 或 hjkl 选择文本，再按 d 进行剪切。</p><h2 id="粘贴-p"><a href="#粘贴-p" class="headerlink" title="粘贴 p"></a>粘贴 p</h2><p>切换插入模式操作。</p><h2 id="文本的撤销恢复-u"><a href="#文本的撤销恢复-u" class="headerlink" title="文本的撤销恢复 u"></a>文本的撤销恢复 u</h2><p>只要在一般模式中按u即可撤销最近一个操作。如果撤销了过多的操作，按Ctrl+r即可恢复最近一次撤销。</p><h2 id="文本的字符串搜索"><a href="#文本的字符串搜索" class="headerlink" title="文本的字符串搜索"></a>文本的字符串搜索</h2><p>命令模式下，输入    /字符串。<br>查看下一个匹配，按下n(小写n)；<br>跳转到上一个匹配，按下N（大写N）。</p><h2 id="文本的显示行号、删除行号"><a href="#文本的显示行号、删除行号" class="headerlink" title="文本的显示行号、删除行号"></a>文本的显示行号、删除行号</h2><p>:set nu 显示行号<br>:set nonu 取消显示行号 </p><h2 id="保存和退出"><a href="#保存和退出" class="headerlink" title="保存和退出"></a>保存和退出</h2><ul><li>: wq!  写入并强制退出</li><li>: q 退出</li><li>: w 写入</li></ul><blockquote><p>未完<br><a href="http://www.liuyaofang.top" title="请点击" target="_blank" rel="noopener">我的个人博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;三个模式&quot;&gt;&lt;a href=&quot;#三个模式&quot; class=&quot;headerlink&quot; title=&quot;三个模式&quot;&gt;&lt;/a&gt;三个模式&lt;/h2&gt;&lt;p&gt;Nomal mode（默认模式）。&lt;br&gt;Insert mode （插入模式 i I  a  A  ）。&lt;br&gt;Visual
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="http://yoursite.com/2019/08/03/19_7_24-markdown%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/03/19_7_24-markdown基本用法/</id>
    <published>2019-08-03T09:37:54.766Z</published>
    <updated>2019-08-05T14:11:19.925Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>己欲立而立人，己欲达而达人</p></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>一个#是一级标题，二个#是二级标题，以此类推。（<strong>支持六级标题</strong>）</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>要加粗的文字 左右 需要用两个**包起来。</p><p><strong>加粗的字体</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">示例： **加粗的字体**</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在引用的文字前加 &gt; 即可。</p><blockquote><p>一级引用</p><blockquote><p>二级引用</p></blockquote></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个或三个以上的 - 或者 * 都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">***</span><br></pre></td></tr></table></figure><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><a href="http://b-ssl.duitang.com/uploads/item/201505/01/20150501010111_2BrKP.jpeg" title="美女" target="_blank" rel="noopener">美女alt</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">！[美女alt](http://b-ssl.duitang.com/uploads/item/201505/01/20150501010111_2BrKP.jpeg &quot;美女&quot;)</span><br></pre></td></tr></table></figure><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[百度](http://baidu.com)</span><br></pre></td></tr></table></figure><p><strong>注：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://baidu.com&quot; target=&quot;_blank&quot;&gt;百度&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表用 - + * 任何一种都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">- 列表内容</span><br><span class="line">- 列表内容</span><br><span class="line"></span><br><span class="line">有序列表 数字加.</span><br><span class="line"></span><br><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line"></span><br><span class="line">列表嵌套 上一级和下一级之间敲三个空格即可。</span><br><span class="line"></span><br><span class="line">- 一级无序</span><br><span class="line">   - 二级无序</span><br><span class="line">   - 二级无序</span><br><span class="line">- 二级无序</span><br><span class="line">   1. 二级有序</span><br><span class="line">   2. 二级有序</span><br><span class="line">   3.</span><br></pre></td></tr></table></figure><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line"></span><br><span class="line">---|:--:|---:</span><br><span class="line"></span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">内容|内容|内容</span><br></pre></td></tr></table></figure><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>单行代码：代码之间分别用一个单引号包起来。 </p><p> <code>hello world</code></p><p>代码块： 代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p>待学</p><h1 id="我的博客网站"><a href="#我的博客网站" class="headerlink" title="我的博客网站"></a>我的博客网站</h1><p><a href="https://www.liuyaofang.top" title="请点击" target="_blank" rel="noopener">我的个人博客网站</a></p><p>学习来源自 </p><blockquote><p> <a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">https://www.jianshu.com/p/191d1e21f7ed</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;己欲立而立人，己欲达而达人&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;一个#是一级标题，二个#是二级标题，以此类推
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux服务器的远程操作</title>
    <link href="http://yoursite.com/2019/08/03/19_8_3-%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5linux%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://yoursite.com/2019/08/03/19_8_3-远程连接linux服务器/</id>
    <published>2019-08-03T04:46:19.432Z</published>
    <updated>2019-08-03T09:48:06.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用xshell进行远程连接"><a href="#使用xshell进行远程连接" class="headerlink" title="使用xshell进行远程连接"></a>使用xshell进行远程连接</h2><ul><li>百度网盘 <a href="https://pan.baidu.com/s/1p9Mi66E74soAxKwF0ULp3Q" target="_blank">请点死我</a></li><li>提取码    <strong>bqpx</strong></li></ul><h2 id="常用的EXE"><a href="#常用的EXE" class="headerlink" title="常用的EXE"></a>常用的EXE</h2><ul><li>xshell 操作命令</li><li>xftp 传输文件</li></ul><blockquote><p>打开xshell默认为本地系统cmd<br>ssh协议默认端口 22<br>安装完毕后，有的连接虚拟机不能连接，我这的原因是因为没有开启ssh服务。</p></blockquote><blockquote><p> 未完<br> <a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用xshell进行远程连接&quot;&gt;&lt;a href=&quot;#使用xshell进行远程连接&quot; class=&quot;headerlink&quot; title=&quot;使用xshell进行远程连接&quot;&gt;&lt;/a&gt;使用xshell进行远程连接&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;百度网盘 &lt;a href=&quot;ht
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux的基本命令和目录解释</title>
    <link href="http://yoursite.com/2019/08/02/19_8_2-linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E5%92%8C%E7%9B%AE%E5%BD%95%E8%A7%A3%E9%87%8A/"/>
    <id>http://yoursite.com/2019/08/02/19_8_2-linux基本命令和目录解释/</id>
    <published>2019-08-02T14:30:48.597Z</published>
    <updated>2019-08-03T10:04:44.865Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h1><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><ul><li>ll  管理员才能用的指令</li><li>ls 各个用户都能用， 参数：  -a所有文件，包含隐藏文件   -l 详细信息</li></ul><h2 id="创建文件夹"><a href="#创建文件夹" class="headerlink" title="创建文件夹"></a>创建文件夹</h2><ul><li>mkdir 参数 -p 为父目录不存在能自动生成父目录</li></ul><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><ul><li>touch 生成空文件</li><li>echo 生成一个带内容的文件  echo  abc &gt; hello.text  一个&gt;写入  ， 两个&gt;&gt; 追加</li></ul><h2 id="显示文件内容"><a href="#显示文件内容" class="headerlink" title="显示文件内容"></a>显示文件内容</h2><ul><li>cat 显示文本文件内容</li></ul><h2 id="复制文件或目录"><a href="#复制文件或目录" class="headerlink" title="复制文件或目录"></a>复制文件或目录</h2><ul><li>cp 复制文件或目录</li></ul><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><ul><li>rm删除  参数 -f强制删除   -r 递归删除  </li><li>删库跑路 rm -rf /*</li></ul><h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><ul><li>mv</li></ul><h2 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h2><ul><li>find  -name  hello 查找文件</li></ul><h2 id="检索文件内容查找"><a href="#检索文件内容查找" class="headerlink" title="检索文件内容查找"></a>检索文件内容查找</h2><ul><li>grep  检索查找  grep liu ./hello/helloword.txt </li></ul><h2 id="分页显示"><a href="#分页显示" class="headerlink" title="分页显示"></a>分页显示</h2><ul><li>more 分页显示文本文件 （more –help 查看帮助）</li></ul><h2 id="显示文件结尾"><a href="#显示文件结尾" class="headerlink" title="显示文件结尾"></a>显示文件结尾</h2><ul><li>tail 显示结尾内容 参数： -f  跟踪输出 （类似于tomcat控制台）</li></ul><blockquote><p> shell 复制粘贴  ： 复制 ctrl + insert  粘贴 shift  + insert （本人试的粘贴不行，网友知道为啥可以私信我，虚心求教）</p></blockquote><hr><h1 id="Linux的系统命令"><a href="#Linux的系统命令" class="headerlink" title="Linux的系统命令"></a>Linux的系统命令</h1><ul><li>top 相当于任务管理器</li><li>ps  当前进程的快照状态</li><li>du 查看使用空间的</li><li>free 显示当前系统内存的使用情况，包括物理内存、交换内存(swap)和内核缓冲区内存。</li><li>netstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等</li></ul><hr><h1 id="压缩解压缩"><a href="#压缩解压缩" class="headerlink" title="压缩解压缩"></a>压缩解压缩</h1><p>tar</p><ul><li>-c压缩</li><li>-x解压缩</li><li>-z gzip算法压缩。压缩文件  *.tar.gz</li><li>-j  bzip2算法压缩。 压缩文件 *.tar.bz2</li><li>-v显示文件列表</li><li>-f 文件名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf ys.tar.gz .  压缩根据gzip算法</span><br><span class="line">tar -xzvf ys.tar.gz  解压缩根据gzip算法</span><br><span class="line"></span><br><span class="line">tar -cjvf kk.tar.bz2 .   压缩当前目录下所有文件为 kk.tar.bz2</span><br><span class="line">tar -xjvf kk.tar.bz2    解压缩根据bzip2算法</span><br></pre></td></tr></table></figure><hr><h1 id="文件夹解释"><a href="#文件夹解释" class="headerlink" title="文件夹解释"></a>文件夹解释</h1><ul><li>bin   - exe可执行文件</li><li>boot - 系统启动的文件</li><li>dev  - 存放设备文件： 打印机</li><li>etc   - 存放系统配置文件 ： mysql的配置文件 等等 </li><li>home - 账户目录</li><li>lib - 运行依赖</li><li>opt - 额外安装的软件</li><li>proc - 存放当前内存的映射</li><li>root - 超级用户目录</li><li>sbin - 超级用户的exe可执行文件</li><li>var  存放数据的目录</li></ul><h3 id="比较重要的四个目录"><a href="#比较重要的四个目录" class="headerlink" title="比较重要的四个目录"></a>比较重要的四个目录</h3><ul><li>home - 账户目录</li><li>etc - 存放系统配置文件 ： mysql的配置文件 等等 </li><li>usr/local - 下载的软件安装的程序放到此目录  </li><li>var  - 存放数据的目录。mysql  .db</li></ul><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本命令&quot;&gt;&lt;a href=&quot;#基本命令&quot; class=&quot;headerlink&quot; title=&quot;基本命令&quot;&gt;&lt;/a&gt;基本命令&lt;/h1&gt;&lt;h2 id=&quot;查看文件&quot;&gt;&lt;a href=&quot;#查看文件&quot; class=&quot;headerlink&quot; title=&quot;查看文件&quot;&gt;&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker的基本用法</title>
    <link href="http://yoursite.com/2019/08/01/19_8_1-docker%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/01/19_8_1-docker基本用法/</id>
    <published>2019-08-01T15:36:23.650Z</published>
    <updated>2019-08-05T14:10:20.338Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>学习要有目的性。</p></blockquote><hr><h1 id="镜像基本操作"><a href="#镜像基本操作" class="headerlink" title="镜像基本操作"></a>镜像基本操作</h1><h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:16.04</span><br></pre></td></tr></table></figure><h2 id="运行镜像"><a href="#运行镜像" class="headerlink" title="运行镜像"></a>运行镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --rm \</span><br><span class="line">    ubuntu:16.04 \</span><br><span class="line">    bash</span><br></pre></td></tr></table></figure><ul><li>-it：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端。我们这里打算进入 bash 执行一些命令并查看返回结果，因此我们需要交互式终端。</li><li>-rm：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 docker rm。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 –rm 可以避免浪费空间。</li><li>ubuntu:16.04：这是指用 ubuntu:16.04 镜像为基础来启动容器。</li><li>bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 bash。</li></ul><h2 id="列出镜像"><a href="#列出镜像" class="headerlink" title="列出镜像"></a>列出镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image ls</span><br></pre></td></tr></table></figure><h2 id="镜像删除"><a href="#镜像删除" class="headerlink" title="镜像删除"></a>镜像删除</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">删除所有仓库名为 redis 的镜像：</span><br><span class="line">$ docker image rm $(docker image ls -q redis)</span><br></pre></td></tr></table></figure><h2 id="虚悬镜像删除"><a href="#虚悬镜像删除" class="headerlink" title="虚悬镜像删除"></a>虚悬镜像删除</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image prune</span><br></pre></td></tr></table></figure><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><ol><li>编写Dockerfile</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM tomcat</span><br><span class="line">WORKDIR /usr/local/tomcat/webapps</span><br><span class="line">COPY ./demo.war .</span><br><span class="line">WORKDIR /usr/local/tomcat</span><br><span class="line">EXPOSE 8080</span><br></pre></td></tr></table></figure><blockquote><p>这一个就需要工作经验了。需要经常写，写了一个简单的例子<br>FROM:以tomcat为基础镜像，from是dockerFile必须的，且放到开头<br>WORKDIR: 是将默认的工作路径变为/usr/local/tomcat/webapps，因为下面需要将war包放到webapps下进行部署<br>COPY:  复制<strong>上下文路径的demo.war(.是上下文的意思，就是dockfile所在的文件夹)</strong>到当前文件夹（上一步将工作路径改变了，默认为webapps）<br>将工作路径变回原样<br>EXPOSE： 端口，仅仅是个说明，方便别人阅读</p></blockquote><ol start="2"><li>根据dockerfile构建镜像</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build [选项] &lt;上下文路径/URL/-&gt;</span><br><span class="line">docker build -t tomcat:v1 .</span><br></pre></td></tr></table></figure><blockquote><p>当构建的时候，用户会指定构建镜像上下文的路径，docker build 命令得知这个路径后，会将路径下的所有内容打包，然后上传给 Docker 引擎。这样 Docker 引擎收到这个上下文包后，展开就会获得构建镜像所需的一切文件。<br>现在就可以理解刚才的命令 docker build -t nginx:v3 . 中的这个 .，实际上是在指定上下文的目录，docker build 命令会将该目录下的内容打包交给 Docker 引擎以帮助构建镜像。</p></blockquote><hr><h1 id="docker容器"><a href="#docker容器" class="headerlink" title="docker容器"></a>docker容器</h1><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -t -i ubuntu:14.04 /bin/bash</span><br></pre></td></tr></table></figure><h2 id="启动终止容器"><a href="#启动终止容器" class="headerlink" title="启动终止容器"></a>启动终止容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container start 容器ID</span><br></pre></td></tr></table></figure><h2 id="守护态运行"><a href="#守护态运行" class="headerlink" title="守护态运行"></a>守护态运行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过添加 -d 参数来实现</span><br></pre></td></tr></table></figure><h2 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container stop</span><br></pre></td></tr></table></figure><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 69d1 bash</span><br></pre></td></tr></table></figure><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker container rm :删除一个终止状态的容器;要删除一个运行中的容器，添加 -f 参数</span><br><span class="line">docker container prune : 清理掉所有处于终止状态的容器</span><br></pre></td></tr></table></figure><hr><h1 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h1><h2 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h2><p>数据卷是可供一个，多个容器共同使用。共享数据，数据持久化。通过<code>-v 宿主机：容器</code>参数实现。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d \ </span><br><span class="line">-p 8081:8080 \</span><br><span class="line">-v /usr/local/docker/tomcatIndex:/usr/local/tomcat/webapps/ROOT \</span><br><span class="line">tomcat</span><br></pre></td></tr></table></figure><ul><li>-d 后台运行</li><li>-P 大P为随机端口映射，小p需配置端口映射</li><li>-v  宿主机：容器 , 挂载主机数据卷</li></ul><hr><h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h1><blockquote><p>dokcer-compose用于快速部署分布式应用。是容器和容器之间的相互配合。由python编写。</p></blockquote><ul><li><p>创建docker-compose.yml。yml语言不能用tab，必须空格</p></li><li><p>简单应用cmpose启动一个8080的tomcat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;2&quot;</span><br><span class="line">services:</span><br><span class="line">  tomcat:</span><br><span class="line">    restart: always</span><br><span class="line">    image: tomcat</span><br><span class="line">    container_name: tomcat</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8080:8080&quot;</span><br></pre></td></tr></table></figure></li><li><p>启动compose。 docker-compose  up  (参数-d后台运行)</p></li><li><p>关闭容器  docker-compose dowm</p></li><li><p>查看日志   docker-compose logs tomcat</p></li></ul><blockquote><p>未完<br><a href="https://www.liuyaofang.top/" title="请点击" target="_blank" rel="noopener">我的博客</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;学习要有目的性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;镜像基本操作&quot;&gt;&lt;a href=&quot;#镜像基本操作&quot; class=&quot;headerlink&quot; title=&quot;镜像基本操作&quot;&gt;&lt;/a&gt;镜像基本操作&lt;/h1&gt;&lt;h2 id=&quot;获
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/07/21/hello-world/"/>
    <id>http://yoursite.com/2019/07/21/hello-world/</id>
    <published>2019-07-21T03:56:37.170Z</published>
    <updated>2019-07-24T14:04:37.943Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
